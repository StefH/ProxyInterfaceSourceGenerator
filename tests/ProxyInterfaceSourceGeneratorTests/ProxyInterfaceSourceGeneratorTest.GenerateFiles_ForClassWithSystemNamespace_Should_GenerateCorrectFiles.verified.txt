[
  {
    HintName: ProxyInterfaceGenerator.Extra.g.cs,
    Source:
//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;

namespace ProxyInterfaceGenerator
{
    
    [AttributeUsage(AttributeTargets.Interface)]
    internal sealed class ProxyAttribute : Attribute
    {
        public Type Type { get; }
        public bool ProxyBaseClasses { get; }
        public ProxyClassAccessibility Accessibility { get; }
        public string[]? MembersToIgnore { get; }

        public ProxyAttribute(Type type) : this(type, false, ProxyClassAccessibility.Public)
        {
        }

        public ProxyAttribute(Type type, bool proxyBaseClasses) : this(type, proxyBaseClasses, ProxyClassAccessibility.Public)
        {
        }

        public ProxyAttribute(Type type, ProxyClassAccessibility accessibility) : this(type, false, accessibility)
        {
        }

        public ProxyAttribute(Type type, ProxyClassAccessibility accessibility, string[]? membersToIgnore) : this(type, false, accessibility, membersToIgnore)
        {
        }

        public ProxyAttribute(Type type, bool proxyBaseClasses, ProxyClassAccessibility accessibility) : this(type, proxyBaseClasses, accessibility, null)
        {
        }

        public ProxyAttribute(Type type, string[]? membersToIgnore) : this(type, false, ProxyClassAccessibility.Public, null)
        {
        }

        public ProxyAttribute(Type type, bool proxyBaseClasses, ProxyClassAccessibility accessibility, string[]? membersToIgnore)
        {
            Type = type;
            ProxyBaseClasses = proxyBaseClasses;
            Accessibility = accessibility;
            MembersToIgnore = membersToIgnore;
        }
    }

    
    [AttributeUsage(AttributeTargets.Interface)]
    internal sealed class ProxyAttribute<T> : Attribute where T : class
    {
        public Type Type { get; }
        public bool ProxyBaseClasses { get; }
        public ProxyClassAccessibility Accessibility { get; }
        public string[]? MembersToIgnore { get; }

        public ProxyAttribute() : this(false, ProxyClassAccessibility.Public)
        {
        }

        public ProxyAttribute(bool proxyBaseClasses) : this(proxyBaseClasses, ProxyClassAccessibility.Public)
        {
        }

        public ProxyAttribute(ProxyClassAccessibility accessibility) : this(false, accessibility)
        {
        }

        public ProxyAttribute(ProxyClassAccessibility accessibility, string[]? membersToIgnore) : this(false, accessibility, membersToIgnore)
        {
        }

        public ProxyAttribute(bool proxyBaseClasses, ProxyClassAccessibility accessibility) : this(proxyBaseClasses, accessibility, null)
        {
        }

        public ProxyAttribute(string[]? membersToIgnore) : this(false, ProxyClassAccessibility.Public, null)
        {
        }

        public ProxyAttribute(bool proxyBaseClasses, ProxyClassAccessibility accessibility, string[]? membersToIgnore)
        {
            Type = typeof(T);
            ProxyBaseClasses = proxyBaseClasses;
            Accessibility = accessibility;
            MembersToIgnore = membersToIgnore;
        }
    }

    [Flags]
    internal enum ProxyClassAccessibility
    {
        Public = 0,

        Internal = 1
    }
}
#nullable restore
  },
  {
    HintName: ProxyInterfaceSourceGeneratorTests.Source.INamespaceSystem.g.cs,
    Source:
//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;

namespace ProxyInterfaceSourceGeneratorTests.Source
{
    public partial interface INamespaceSystem
    {
        global::ProxyInterfaceSourceGeneratorTests.Source.System.NamespaceSystem _Instance { get; }

        global::System.Threading.Tasks.Task TestAsync1(global::System.Threading.CancellationToken cancellation = default(global::System.Threading.CancellationToken));

        global::System.Threading.Tasks.Task TestAsync2(global::System.Threading.CancellationToken cancellation);
    }
}
#nullable restore
  },
  {
    HintName: ProxyInterfaceSourceGeneratorTests.Source.System.NamespaceSystemProxy.g.cs,
    Source:
//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;

namespace ProxyInterfaceSourceGeneratorTests.Source
{
    public partial class NamespaceSystemProxy : global::ProxyInterfaceSourceGeneratorTests.Source.INamespaceSystem
    {


        public global::ProxyInterfaceSourceGeneratorTests.Source.System.NamespaceSystem _Instance { get; }
        
        public global::System.Threading.Tasks.Task TestAsync1(global::System.Threading.CancellationToken cancellation = default(global::System.Threading.CancellationToken))
        {
            global::System.Threading.CancellationToken cancellation_ = cancellation;
            var result_424844497 = _Instance.TestAsync1(cancellation_);
            return result_424844497;
        }

        public global::System.Threading.Tasks.Task TestAsync2(global::System.Threading.CancellationToken cancellation)
        {
            global::System.Threading.CancellationToken cancellation_ = cancellation;
            var result_828129024 = _Instance.TestAsync2(cancellation_);
            return result_828129024;
        }


        public NamespaceSystemProxy(global::ProxyInterfaceSourceGeneratorTests.Source.System.NamespaceSystem instance)
        {
            _Instance = instance;
            
        }
    }
}
#nullable restore
  }
]