//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;

namespace ProxyInterfaceSourceGeneratorTests.Source.PnP
{
    public partial interface IWeb
    {
        new Microsoft.SharePoint.Client.Web _Instance { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string AccessRequestListUrl { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string AccessRequestSiteDescription { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string Acronym { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.AlertCollection Alerts { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool AllowAutomaticASPXPageIndexing { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool AllowCreateDeclarativeWorkflowForCurrentUser { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool AllowDesignerForCurrentUser { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool AllowMasterPageEditingForCurrentUser { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool AllowRevertFromTemplateForCurrentUser { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool AllowRssFeeds { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool AllowSaveDeclarativeWorkflowAsTemplateForCurrentUser { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool AllowSavePublishDeclarativeWorkflowForCurrentUser { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.PropertyValues AllProperties { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string AlternateCssUrl { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        System.Guid AppInstanceId { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.AppTileCollection AppTiles { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.Group AssociatedMemberGroup { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.Group AssociatedOwnerGroup { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.Group AssociatedVisitorGroup { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.User Author { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ContentTypeCollection AvailableContentTypes { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.FieldCollection AvailableFields { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ModernizeHomepageResult CanModernizeHomepage { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string ClassicWelcomePage { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool CommentsOnSitePagesDisabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        short Configuration { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool ContainsConfidentialInfo { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ContentTypeCollection ContentTypes { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        System.DateTime Created { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ChangeToken CurrentChangeToken { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.User CurrentUser { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string CustomMasterUrl { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool CustomSiteActionsDisabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.SPDataLeakagePreventionStatusInfo DataLeakagePreventionStatusInfo { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string Description { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string DescriptionForExistingLanguage { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.UserResource DescriptionResource { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        System.Collections.Generic.IEnumerable<Microsoft.SharePoint.Client.SPResourceEntry> DescriptionTranslations { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string DesignerDownloadUrlForCurrentUser { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        System.Guid DesignPackageId { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool DisableAppViews { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool DisableFlows { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool DisableRecommendedItems { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool DocumentLibraryCalloutOfficeWebAppPreviewersDisabled { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.BasePermissions EffectiveBasePermissions { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool EnableMinimalDownload { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.EventReceiverDefinitionCollection EventReceivers { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool ExcludeFromOfflineClient { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.FeatureCollection Features { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.FieldCollection Fields { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.FolderCollection Folders { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.FooterVariantThemeType FooterEmphasis { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool FooterEnabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.FooterLayoutType FooterLayout { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool HasWebTemplateExtension { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.SPVariantThemeType HeaderEmphasis { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.HeaderLayoutType HeaderLayout { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool HideTitleInHeader { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool HorizontalQuickLaunch { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.ClientSideComponent.HostedAppsManager HostedApps { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        System.Guid Id { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool IsEduClass { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool IsEduClassProvisionChecked { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool IsEduClassProvisionPending { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool IsHomepageModernized { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool IsMultilingual { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool IsProvisioningComplete { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool IsRevertHomepageLinkHidden { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        uint Language { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        System.DateTime LastItemModifiedDate { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        System.DateTime LastItemUserModifiedDate { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ListCollection Lists { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ListTemplateCollection ListTemplates { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.LogoAlignment LogoAlignment { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string MasterUrl { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool MegaMenuEnabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool MembersCanShare { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool NavAudienceTargetingEnabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.Navigation Navigation { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool NextStepsFirstRunEnabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool NoCrawl { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool NotificationsInOneDriveForBusinessEnabled { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool NotificationsInSharePointEnabled { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool ObjectCacheEnabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool OverwriteTranslationsOnChange { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.WebInformation ParentWeb { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ResourcePath ResourcePath { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool PreviewFeaturesEnabled { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string PrimaryColor { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.PushNotificationSubscriberCollection PushNotificationSubscribers { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool QuickLaunchEnabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.RecycleBinItemCollection RecycleBin { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool RecycleBinEnabled { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.RegionalSettings RegionalSettings { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string RequestAccessEmail { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.RoleDefinitionCollection RoleDefinitions { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.Folder RootFolder { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool SaveSiteAsTemplateEnabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.SearchBoxInNavBarType SearchBoxInNavBar { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string SearchBoxPlaceholderText { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.SearchScopeType SearchScope { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ResourcePath ServerRelativePath { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string ServerRelativeUrl { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool ShowUrlStructureForCurrentUser { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.SiteCollectionCorporateCatalogAccessor SiteCollectionAppCatalog { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.GroupCollection SiteGroups { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string SiteLogoDescription { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string SiteLogoUrl { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.List SiteUserInfoList { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.UserCollection SiteUsers { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        System.Collections.Generic.IEnumerable<int> SupportedUILanguageIds { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool SyndicationEnabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.SharingState TenantAdminMembersCanShare { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Marketplace.CorporateCuratedGallery.TenantCorporateCatalogAccessor TenantAppCatalog { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool TenantTagPolicyEnabled { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string ThemedCssFolderUrl { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ThemeInfo ThemeInfo { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool ThirdPartyMdmEnabled { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string Title { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string TitleForExistingLanguage { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.UserResource TitleResource { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        System.Collections.Generic.IEnumerable<Microsoft.SharePoint.Client.SPResourceEntry> TitleTranslations { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool TreeViewEnabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        int UIVersion { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool UIVersionConfigurationEnabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string Url { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool UseAccessRequestDefault { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.UserCustomActionCollection UserCustomActions { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.WebCollection Webs { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string WebTemplate { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string WebTemplateConfiguration { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        bool WebTemplatesGalleryFirstRunEnabled { get; set; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        string WelcomePage { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.Workflow.WorkflowAssociationCollection WorkflowAssociations { get; }

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.Workflow.WorkflowTemplateCollection WorkflowTemplates { get; }



        System.Uri WebUrlFromPageUrlDirect(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientContext context, System.Uri pageFullUrl);

        System.Uri WebUrlFromFolderUrlDirect(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientContext context, System.Uri folderFullUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<bool> DoesUserHavePermissions(Microsoft.SharePoint.Client.BasePermissions permissionMask);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<Microsoft.SharePoint.Client.BasePermissions> GetUserEffectivePermissions(string userName);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void CreateDefaultAssociatedGroups(string userLogin, string userLogin2, string groupNameSeed);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<string> CreateOrganizationSharingLink(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string url, bool isEditLink);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void DestroyOrganizationSharingLink(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string url, bool isEditLink, bool removeAssociatedSharingLinkGroup);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<Microsoft.SharePoint.Client.SharingLinkKind> GetSharingLinkKind(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string fileUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<Microsoft.SharePoint.Client.SharingLinkData> GetSharingLinkData(string linkUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<string> MapToIcon(string fileName, string progId, Microsoft.SharePoint.Client.Utilities.IconSize size);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<string> GetWebUrlFromPageUrl(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string pageFullUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.PushNotificationSubscriber RegisterPushNotificationSubscriber(System.Guid deviceAppInstanceId, string serviceToken);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void UnregisterPushNotificationSubscriber(System.Guid deviceAppInstanceId);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.PushNotificationSubscriberCollection GetPushNotificationSubscribersByArgs(string customArgs);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.PushNotificationSubscriberCollection GetPushNotificationSubscribersByUser(string userName);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<bool> DoesPushNotificationSubscriberExist(System.Guid deviceAppInstanceId);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.PushNotificationSubscriber GetPushNotificationSubscriber(System.Guid deviceAppInstanceId);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.User GetSiteUserIncludingDeletedByPuid(string puid);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.User GetUserById(int userId);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<bool> EnsureTenantAppCatalog(string callerId);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.ClientSideComponent.StorageEntity GetStorageEntity(string key);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void SetStorageEntity(string key, string value, string description, string comments);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void RemoveStorageEntity(string key);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.SharingResult ShareObject(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string url, string peoplePickerInput, string roleValue, int groupId, bool propagateAcl, bool sendEmail, bool includeAnonymousLinkInEmail, string emailSubject, string emailBody, bool useSimplifiedRoles);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.SharingResult ForwardObjectLink(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string url, string peoplePickerInput, string emailSubject, string emailBody);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.SharingResult UnshareObject(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string url);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ObjectSharingSettings GetObjectSharingSettings(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string objectUrl, int groupId, bool useSimplifiedRoles);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<string> CreateAnonymousLink(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string url, bool isEditLink);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<string> CreateAnonymousLinkWithExpiration(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string url, bool isEditLink, string expirationString);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void DeleteAllAnonymousLinksForObject(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string url);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void DeleteAnonymousLinkForObject(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string url, bool isEditLink, bool removeAssociatedSharingLinkGroup);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ListCollection GetLists(Microsoft.SharePoint.Client.GetListsParameters getListsParams);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.WebTemplateCollection GetAvailableWebTemplates(uint lcid, bool doIncludeCrossLanguage);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.List GetCatalog(int typeCatalog);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.RecycleBinItemCollection GetRecycleBinItems(string pagingInfo, int rowLimit, bool isAscending, Microsoft.SharePoint.Client.RecycleBinOrderBy orderBy, Microsoft.SharePoint.Client.RecycleBinItemState itemState);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.RecycleBinItemCollection GetRecycleBinItemsByQueryInfo(Microsoft.SharePoint.Client.RecycleBinQueryInformation queryInfo);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ChangeCollection GetChanges(Microsoft.SharePoint.Client.ChangeQuery query);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.List GetList(string strUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.List GetListUsingPath(Microsoft.SharePoint.Client.ResourcePath path);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ListItem GetListItem(string strUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ListItem GetListItemUsingPath(Microsoft.SharePoint.Client.ResourcePath path);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ListItem GetListItemByResourceId(string resourceId);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.BusinessData.MetadataModel.Entity GetEntity(string @namespace, string name);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.BusinessData.MetadataModel.AppBdcCatalog GetAppBdcCatalogForAppInstance(System.Guid appInstanceId);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.BusinessData.MetadataModel.AppBdcCatalog GetAppBdcCatalog();

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.WebCollection GetSubwebsForCurrentUser(Microsoft.SharePoint.Client.SubwebQuery query);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<System.IO.Stream> GetSPAppContextAsStream();

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void Update();

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.View GetViewFromUrl(string listUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.View GetViewFromPath(Microsoft.SharePoint.Client.ResourcePath listPath);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.File GetFileByServerRelativeUrl(string serverRelativeUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.File GetFileByServerRelativePath(Microsoft.SharePoint.Client.ResourcePath serverRelativePath);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        System.Collections.Generic.IList<Microsoft.SharePoint.Client.DocumentLibraryInformation> GetDocumentLibraries(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string webFullUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        System.Collections.Generic.IList<Microsoft.SharePoint.Client.DocumentLibraryInformation> GetDocumentAndMediaLibraries(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string webFullUrl, bool includePageLibraries);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<Microsoft.SharePoint.Client.DocumentLibraryInformation> DefaultDocumentLibraryUrl(ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientRuntimeContext context, string webUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.List DefaultDocumentLibrary();

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.File GetFileById(System.Guid uniqueId);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.Folder GetFolderById(System.Guid uniqueId);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.File GetFileByLinkingUrl(string linkingUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.File GetFileByGuestUrl(string guestUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.File GetFileByGuestUrlEnsureAccess(string guestUrl, bool ensureAccess);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.File GetFileByWOPIFrameUrl(string wopiFrameUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.File GetFileByUrl(string fileUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.Folder GetFolderByServerRelativeUrl(string serverRelativeUrl);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.Folder GetFolderByServerRelativePath(Microsoft.SharePoint.Client.ResourcePath serverRelativePath);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void ApplyWebTemplate(string webTemplate);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void DeleteObject();

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<System.IO.Stream> PageContextInfo(bool includeODBSettings, bool emitNavigationInfo);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<System.IO.Stream> PageContextCore();

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.AppInstance GetAppInstanceById(System.Guid appInstanceId);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientObjectList<Microsoft.SharePoint.Client.AppInstance> GetAppInstancesByProductId(System.Guid productId);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.AppInstance LoadAndInstallAppInSpecifiedLocale(System.IO.Stream appPackageStream, int installationLocaleLCID);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.AppInstance LoadApp(System.IO.Stream appPackageStream, int installationLocaleLCID);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.ClientResult<System.Guid> AddPlaceholderUser(string listId, string placeholderText);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.AppInstance LoadAndInstallApp(System.IO.Stream appPackageStream);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void SetAccessRequestSiteDescriptionAndUpdate(string description);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void SetUseAccessRequestDefaultAndUpdate(bool useAccessRequestDefault);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void IncrementSiteClientTag();

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void AddSupportedUILanguage(int lcid);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void RemoveSupportedUILanguage(int lcid);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.User EnsureUser(string logonName);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        Microsoft.SharePoint.Client.User EnsureUserByObjectId(System.Guid objectId, System.Guid tenantId, Microsoft.SharePoint.Client.Utilities.PrincipalType principalType);

        [Microsoft.SharePoint.Client.RemoteAttribute]
        void ApplyTheme(string colorPaletteUrl, string fontSchemeUrl, string backgroundImageUrl, bool shareGenerated);




    }
}
#nullable restore