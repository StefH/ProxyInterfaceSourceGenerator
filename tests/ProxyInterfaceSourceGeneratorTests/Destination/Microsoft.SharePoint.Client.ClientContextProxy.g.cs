//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;


namespace ProxyInterfaceSourceGeneratorTests.Source.PnP
{
    public partial class ClientContextProxy : ProxyInterfaceSourceGeneratorTests.Source.PnP.ClientRuntimeContextProxy, IClientContext
    {
        public new Microsoft.SharePoint.Client.ClientContext _Instance { get; }
        public Microsoft.SharePoint.Client.ClientRuntimeContext _InstanceBase { get; }


        public Microsoft.SharePoint.Client.Web Web { get => _Instance.Web; }

        public Microsoft.SharePoint.Client.Site Site { get => _Instance.Site; }

        public Microsoft.SharePoint.Client.RequestResources RequestResources { get => _Instance.RequestResources; }

        public System.Version ServerVersion { get => _Instance.ServerVersion; }



        public Microsoft.SharePoint.Client.FormDigestInfo GetFormDigestDirect()
        {
            var result_333437737 = _Instance.GetFormDigestDirect();
            return result_333437737;
        }

        public void ExecuteQuery()
        {
            _Instance.ExecuteQuery();
        }

        public System.Threading.Tasks.Task ExecuteQueryAsync()
        {
            var result_737681611 = _Instance.ExecuteQueryAsync();
            return result_737681611;
        }





        public ClientContextProxy(Microsoft.SharePoint.Client.ClientContext instance) : base(instance)
        {
            _Instance = instance;
            _InstanceBase = instance;


        }


    }
}
#nullable disable