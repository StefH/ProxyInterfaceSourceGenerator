//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;
using AutoMapper;

namespace ProxyInterfaceSourceGeneratorTests.DTO
{
    public class PersonProxy : IPerson
    {
        public ProxyInterfaceSourceGeneratorTests.DTO.Person _Instance { get; }

        public string Name { get => _Instance.Name; set => _Instance.Name = value; }

        public string? StringNullable { get => _Instance.StringNullable; set => _Instance.StringNullable = value; }

        public long? NullableLong { get => _Instance.NullableLong; }

        public object @object { get => _Instance.@object; set => _Instance.@object = value; }



        public void Void()
        {
             _Instance.Void();
        }

        public string HelloWorld(string name)
        {
             string name_ = name;
             var result_15289640 = _Instance.HelloWorld(name_);
             return result_15289640;
        }

        public void WithParams(params string[] values)
        {
             string[] values_ = values;
             _Instance.WithParams(values_);
        }

        public string Add(string s, string @string)
        {
             string s_ = s;
             string @string_ = @string;
             var result_15289640 = _Instance.Add(s_, @string_);
             return result_15289640;
        }

        public int DefaultValue(int x = 100)
        {
             int x_ = x;
             var result_54302544 = _Instance.DefaultValue(x_);
             return result_54302544;
        }

        public void In_Out_Ref1(in int a, out int b, ref int c)
        {
             int a_ = a;
             int b_;
             int c_ = c;
             _Instance.In_Out_Ref1(in a_, out b_, ref c_);
             b = b_;
        }

        public bool Generic2<T1, T2>(int x, T1 t1, T2 t2) where T1 : struct where T2 : class, new()
        {
             int x_ = x;
             T1 t1_ = t1;
             T2 t2_ = t2;
             var result_40004473 = _Instance.Generic2<T1, T2>(x_, t1_, t2_);
             return result_40004473;
        }

        public System.Threading.Tasks.Task Method1Async()
        {
             var result_50153955 = _Instance.Method1Async();
             return result_50153955;
        }

        public System.Threading.Tasks.Task<int> Method2Async()
        {
             var result_1151242754 = _Instance.Method2Async();
             return result_1151242754;
        }

        public System.Threading.Tasks.Task<string?> Method3Async()
        {
             var result_1190255658 = _Instance.Method3Async();
             return result_1190255658;
        }





        public PersonProxy(ProxyInterfaceSourceGeneratorTests.DTO.Person instance)
        {
            _Instance = instance;


        }


    }
}
#nullable disable