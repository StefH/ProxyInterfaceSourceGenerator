//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;

namespace ProxyInterfaceSourceGeneratorTests.Source.PnP
{
    public partial interface IClientRuntimeContext : global::System.IDisposable
    {
        global::Microsoft.SharePoint.Client.ClientRuntimeContext _Instance { get; }

        event global::System.EventHandler<global::Microsoft.SharePoint.Client.WebRequestEventArgs> ExecutingWebRequest;

        string Url { get; }

        string ApplicationName { get; set; }

        string ClientTag { get; set; }

        bool DisableReturnValueCache { get; set; }

        bool ValidateOnClient { get; set; }

        global::System.Net.ICredentials Credentials { get; set; }

        global::Microsoft.SharePoint.Client.WebRequestExecutorFactory WebRequestExecutorFactory { get; set; }

        global::Microsoft.SharePoint.Client.ClientRequest PendingRequest { get; }

        bool HasPendingRequest { get; }

        object Tag { get; set; }

        int RequestTimeout { get; set; }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        global::System.Collections.Generic.Dictionary<string, object> StaticObjects { get; }

        global::System.Version ServerSchemaVersion { get; }

        global::System.Version ServerLibraryVersion { get; }

        global::System.Version RequestSchemaVersion { get; set; }

        string TraceCorrelationId { get; set; }

        void ExecuteQuery();

        void RetryQuery(global::Microsoft.SharePoint.Client.ClientRequest request);

        global::System.Threading.Tasks.Task ExecuteQueryAsync();

        global::System.Threading.Tasks.Task RetryQueryAsync(global::Microsoft.SharePoint.Client.ClientRequest request);

        T CastTo<T>(global::ProxyInterfaceSourceGeneratorTests.Source.PnP.IClientObject obj) where T : Microsoft.SharePoint.Client.ClientObject;

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        void AddQuery(global::Microsoft.SharePoint.Client.ClientAction query);

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        void AddQueryIdAndResultObject(long id, object obj);

        object ParseObjectFromJsonString(string json);

        void AddClientTypeAssembly(global::System.Reflection.Assembly @assembly);

        void Load<T>(T clientObject, params global::System.Linq.Expressions.Expression<global::System.Func<T, object>>[] retrievals) where T : Microsoft.SharePoint.Client.ClientObject;

        global::System.Collections.Generic.IEnumerable<T> LoadQuery<T>(global::Microsoft.SharePoint.Client.ClientObjectCollection<T> clientObjects) where T : Microsoft.SharePoint.Client.ClientObject;

        global::System.Collections.Generic.IEnumerable<T> LoadQuery<T>(global::System.Linq.IQueryable<T> clientObjects) where T : Microsoft.SharePoint.Client.ClientObject;
    }
}
#nullable restore