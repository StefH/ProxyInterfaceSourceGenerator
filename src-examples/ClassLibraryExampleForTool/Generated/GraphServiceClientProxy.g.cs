//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;

namespace Microsoft.Graph
{
    public partial class GraphServiceClientProxy : IGraphServiceClient
    {

        private static Core.Requests.IBatchRequestBuilder MapToInterface(Core.Requests.BatchRequestBuilder value)
        {
            return new Core.Requests.BatchRequestBuilderProxy(value);
        }



        public GraphServiceClient _Instance { get; }
        
        public Kiota.Abstractions.IRequestAdapter RequestAdapter { get => _Instance.RequestAdapter; set => _Instance.RequestAdapter = value; }

        public Core.Requests.IBatchRequestBuilder Batch { get => MapToInterface(_Instance.Batch); }

        public Admin.AdminRequestBuilder Admin { get => _Instance.Admin; }

        public AgreementAcceptances.AgreementAcceptancesRequestBuilder AgreementAcceptances { get => _Instance.AgreementAcceptances; }

        public Agreements.AgreementsRequestBuilder Agreements { get => _Instance.Agreements; }

        public AppCatalogs.AppCatalogsRequestBuilder AppCatalogs { get => _Instance.AppCatalogs; }

        public Applications.ApplicationsRequestBuilder Applications { get => _Instance.Applications; }

        public ApplicationTemplates.ApplicationTemplatesRequestBuilder ApplicationTemplates { get => _Instance.ApplicationTemplates; }

        public AuditLogs.AuditLogsRequestBuilder AuditLogs { get => _Instance.AuditLogs; }

        public AuthenticationMethodConfigurations.AuthenticationMethodConfigurationsRequestBuilder AuthenticationMethodConfigurations { get => _Instance.AuthenticationMethodConfigurations; }

        public AuthenticationMethodsPolicy.AuthenticationMethodsPolicyRequestBuilder AuthenticationMethodsPolicy { get => _Instance.AuthenticationMethodsPolicy; }

        public CertificateBasedAuthConfiguration.CertificateBasedAuthConfigurationRequestBuilder CertificateBasedAuthConfiguration { get => _Instance.CertificateBasedAuthConfiguration; }

        public Chats.ChatsRequestBuilder Chats { get => _Instance.Chats; }

        public Communications.CommunicationsRequestBuilder Communications { get => _Instance.Communications; }

        public Compliance.ComplianceRequestBuilder Compliance { get => _Instance.Compliance; }

        public Connections.ConnectionsRequestBuilder Connections { get => _Instance.Connections; }

        public Contacts.ContactsRequestBuilder Contacts { get => _Instance.Contacts; }

        public Contracts.ContractsRequestBuilder Contracts { get => _Instance.Contracts; }

        public DataPolicyOperations.DataPolicyOperationsRequestBuilder DataPolicyOperations { get => _Instance.DataPolicyOperations; }

        public DeviceAppManagement.DeviceAppManagementRequestBuilder DeviceAppManagement { get => _Instance.DeviceAppManagement; }

        public DeviceManagement.DeviceManagementRequestBuilder DeviceManagement { get => _Instance.DeviceManagement; }

        public Devices.DevicesRequestBuilder Devices { get => _Instance.Devices; }

        public DirectoryNamespace.DirectoryRequestBuilder Directory { get => _Instance.Directory; }

        public DirectoryObjects.DirectoryObjectsRequestBuilder DirectoryObjects { get => _Instance.DirectoryObjects; }

        public DirectoryRoles.DirectoryRolesRequestBuilder DirectoryRoles { get => _Instance.DirectoryRoles; }

        public DirectoryRoleTemplates.DirectoryRoleTemplatesRequestBuilder DirectoryRoleTemplates { get => _Instance.DirectoryRoleTemplates; }

        public DomainDnsRecords.DomainDnsRecordsRequestBuilder DomainDnsRecords { get => _Instance.DomainDnsRecords; }

        public Domains.DomainsRequestBuilder Domains { get => _Instance.Domains; }

        public Drives.DrivesRequestBuilder Drives { get => _Instance.Drives; }

        public Education.EducationRequestBuilder Education { get => _Instance.Education; }

        public EmployeeExperience.EmployeeExperienceRequestBuilder EmployeeExperience { get => _Instance.EmployeeExperience; }

        public External.ExternalRequestBuilder External { get => _Instance.External; }

        public FilterOperators.FilterOperatorsRequestBuilder FilterOperators { get => _Instance.FilterOperators; }

        public Functions.FunctionsRequestBuilder Functions { get => _Instance.Functions; }

        public GroupLifecyclePolicies.GroupLifecyclePoliciesRequestBuilder GroupLifecyclePolicies { get => _Instance.GroupLifecyclePolicies; }

        public Groups.GroupsRequestBuilder Groups { get => _Instance.Groups; }

        public GroupSettings.GroupSettingsRequestBuilder GroupSettings { get => _Instance.GroupSettings; }

        public GroupSettingTemplates.GroupSettingTemplatesRequestBuilder GroupSettingTemplates { get => _Instance.GroupSettingTemplates; }

        public Identity.IdentityRequestBuilder Identity { get => _Instance.Identity; }

        public IdentityGovernance.IdentityGovernanceRequestBuilder IdentityGovernance { get => _Instance.IdentityGovernance; }

        public IdentityProtection.IdentityProtectionRequestBuilder IdentityProtection { get => _Instance.IdentityProtection; }

        public IdentityProviders.IdentityProvidersRequestBuilder IdentityProviders { get => _Instance.IdentityProviders; }

        public InformationProtection.InformationProtectionRequestBuilder InformationProtection { get => _Instance.InformationProtection; }

        public Invitations.InvitationsRequestBuilder Invitations { get => _Instance.Invitations; }

        public Me.MeRequestBuilder Me { get => _Instance.Me; }

        public Oauth2PermissionGrants.Oauth2PermissionGrantsRequestBuilder Oauth2PermissionGrants { get => _Instance.Oauth2PermissionGrants; }

        public Organization.OrganizationRequestBuilder Organization { get => _Instance.Organization; }

        public PermissionGrants.PermissionGrantsRequestBuilder PermissionGrants { get => _Instance.PermissionGrants; }

        public Places.PlacesRequestBuilder Places { get => _Instance.Places; }

        public Planner.PlannerRequestBuilder Planner { get => _Instance.Planner; }

        public Policies.PoliciesRequestBuilder Policies { get => _Instance.Policies; }

        public Print.PrintRequestBuilder Print { get => _Instance.Print; }

        public Privacy.PrivacyRequestBuilder Privacy { get => _Instance.Privacy; }

        public Reports.ReportsRequestBuilder Reports { get => _Instance.Reports; }

        public RoleManagement.RoleManagementRequestBuilder RoleManagement { get => _Instance.RoleManagement; }

        public SchemaExtensions.SchemaExtensionsRequestBuilder SchemaExtensions { get => _Instance.SchemaExtensions; }

        public ScopedRoleMemberships.ScopedRoleMembershipsRequestBuilder ScopedRoleMemberships { get => _Instance.ScopedRoleMemberships; }

        public Search.SearchRequestBuilder Search { get => _Instance.Search; }

        public Security.SecurityRequestBuilder Security { get => _Instance.Security; }

        public ServicePrincipals.ServicePrincipalsRequestBuilder ServicePrincipals { get => _Instance.ServicePrincipals; }

        public Shares.SharesRequestBuilder Shares { get => _Instance.Shares; }

        public Sites.SitesRequestBuilder Sites { get => _Instance.Sites; }

        public Solutions.SolutionsRequestBuilder Solutions { get => _Instance.Solutions; }

        public Storage.StorageRequestBuilder Storage { get => _Instance.Storage; }

        public SubscribedSkus.SubscribedSkusRequestBuilder SubscribedSkus { get => _Instance.SubscribedSkus; }

        public Subscriptions.SubscriptionsRequestBuilder Subscriptions { get => _Instance.Subscriptions; }

        public Teams.TeamsRequestBuilder Teams { get => _Instance.Teams; }

        public TeamsTemplates.TeamsTemplatesRequestBuilder TeamsTemplates { get => _Instance.TeamsTemplates; }

        public Teamwork.TeamworkRequestBuilder Teamwork { get => _Instance.Teamwork; }

        public TenantRelationships.TenantRelationshipsRequestBuilder TenantRelationships { get => _Instance.TenantRelationships; }

        public Users.UsersRequestBuilder Users { get => _Instance.Users; }

        public void Dispose()
        {
            _Instance.Dispose();
        }

        public ApplicationsWithAppId.ApplicationsWithAppIdRequestBuilder ApplicationsWithAppId(string appId)
        {
            string appId_ = appId;
            var result_2016734975 = _Instance.ApplicationsWithAppId(appId_);
            return result_2016734975;
        }

        public ApplicationsWithUniqueName.ApplicationsWithUniqueNameRequestBuilder ApplicationsWithUniqueName(string uniqueName)
        {
            string uniqueName_ = uniqueName;
            var result__50355501 = _Instance.ApplicationsWithUniqueName(uniqueName_);
            return result__50355501;
        }

        public DevicesWithDeviceId.DevicesWithDeviceIdRequestBuilder DevicesWithDeviceId(string deviceId)
        {
            string deviceId_ = deviceId;
            var result_1418308542 = _Instance.DevicesWithDeviceId(deviceId_);
            return result_1418308542;
        }

        public DirectoryRolesWithRoleTemplateId.DirectoryRolesWithRoleTemplateIdRequestBuilder DirectoryRolesWithRoleTemplateId(string roleTemplateId)
        {
            string roleTemplateId_ = roleTemplateId;
            var result_32291941 = _Instance.DirectoryRolesWithRoleTemplateId(roleTemplateId_);
            return result_32291941;
        }

        public GroupsWithUniqueName.GroupsWithUniqueNameRequestBuilder GroupsWithUniqueName(string uniqueName)
        {
            string uniqueName_ = uniqueName;
            var result_1751586938 = _Instance.GroupsWithUniqueName(uniqueName_);
            return result_1751586938;
        }

        public ServicePrincipalsWithAppId.ServicePrincipalsWithAppIdRequestBuilder ServicePrincipalsWithAppId(string appId)
        {
            string appId_ = appId;
            var result_984590704 = _Instance.ServicePrincipalsWithAppId(appId_);
            return result_984590704;
        }

        public UsersWithUserPrincipalName.UsersWithUserPrincipalNameRequestBuilder UsersWithUserPrincipalName(string userPrincipalName)
        {
            string userPrincipalName_ = userPrincipalName;
            var result__972389990 = _Instance.UsersWithUserPrincipalName(userPrincipalName_);
            return result__972389990;
        }


        public GraphServiceClientProxy(GraphServiceClient instance)
        {
            _Instance = instance;
            
        }
    }
}
#nullable restore