//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;

namespace Microsoft.Graph.Admin.Edge
{
    public partial class EdgeRequestBuilderProxy : Edge.IEdgeRequestBuilder
    {

        private static Edge.IEdgeRequestBuilder MapToInterface(EdgeRequestBuilder value)
        {
            return new EdgeRequestBuilderProxy(value);
        }

        private static EdgeRequestBuilder MapToInstance(Edge.IEdgeRequestBuilder value)
        {
            return value._Instance;
        }

        private static Admin.IAdminRequestBuilder MapToInterface(AdminRequestBuilder value)
        {
            return new Admin.AdminRequestBuilderProxy(value);
        }

        private static AdminRequestBuilder MapToInstance(Admin.IAdminRequestBuilder value)
        {
            return value._Instance;
        }



        public EdgeRequestBuilder _Instance { get; }
        
        public InternetExplorerMode.InternetExplorerModeRequestBuilder InternetExplorerMode { get => _Instance.InternetExplorerMode; }

        public System.Threading.Tasks.Task DeleteAsync(Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration = null, System.Threading.CancellationToken cancellationToken = default)
        {
            Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration_ = requestConfiguration;
            System.Threading.CancellationToken cancellationToken_ = cancellationToken;
            var result_534537427 = _Instance.DeleteAsync(requestConfiguration_, cancellationToken_);
            return result_534537427;
        }

        public System.Threading.Tasks.Task<Models.Edge?> GetAsync(Action<Kiota.Abstractions.RequestConfiguration<EdgeRequestBuilder.EdgeRequestBuilderGetQueryParameters>>? requestConfiguration = null, System.Threading.CancellationToken cancellationToken = default)
        {
            Action<Kiota.Abstractions.RequestConfiguration<EdgeRequestBuilder.EdgeRequestBuilderGetQueryParameters>>? requestConfiguration_ = requestConfiguration;
            System.Threading.CancellationToken cancellationToken_ = cancellationToken;
            var result_1805284658 = _Instance.GetAsync(requestConfiguration_, cancellationToken_);
            return result_1805284658;
        }

        public System.Threading.Tasks.Task<Models.Edge?> PatchAsync(Models.Edge body, Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration = null, System.Threading.CancellationToken cancellationToken = default)
        {
            Models.Edge body_ = body;
            Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration_ = requestConfiguration;
            System.Threading.CancellationToken cancellationToken_ = cancellationToken;
            var result_910894592 = _Instance.PatchAsync(body_, requestConfiguration_, cancellationToken_);
            return result_910894592;
        }

        public Kiota.Abstractions.RequestInformation ToDeleteRequestInformation(Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration = null)
        {
            Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration_ = requestConfiguration;
            var result__1658178693 = _Instance.ToDeleteRequestInformation(requestConfiguration_);
            return result__1658178693;
        }

        public Kiota.Abstractions.RequestInformation ToGetRequestInformation(Action<Kiota.Abstractions.RequestConfiguration<EdgeRequestBuilder.EdgeRequestBuilderGetQueryParameters>>? requestConfiguration = null)
        {
            Action<Kiota.Abstractions.RequestConfiguration<EdgeRequestBuilder.EdgeRequestBuilderGetQueryParameters>>? requestConfiguration_ = requestConfiguration;
            var result__695410420 = _Instance.ToGetRequestInformation(requestConfiguration_);
            return result__695410420;
        }

        public Kiota.Abstractions.RequestInformation ToPatchRequestInformation(Models.Edge body, Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration = null)
        {
            Models.Edge body_ = body;
            Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration_ = requestConfiguration;
            var result_2136344646 = _Instance.ToPatchRequestInformation(body_, requestConfiguration_);
            return result_2136344646;
        }

        public Edge.IEdgeRequestBuilder WithUrl(string rawUrl)
        {
            string rawUrl_ = rawUrl;
            var result_232713549 = _Instance.WithUrl(rawUrl_);
            return MapToInterface(result_232713549);
        }


        public EdgeRequestBuilderProxy(EdgeRequestBuilder instance)
        {
            _Instance = instance;
            
        }
    }
}
#nullable restore