//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;

namespace Microsoft.Graph
{
    public partial interface IGraphServiceClient : IBaseClient, IDisposable
    {
        GraphServiceClient _Instance { get; }

        Admin.IAdminRequestBuilder Admin { get; }

        AgreementAcceptances.AgreementAcceptancesRequestBuilder AgreementAcceptances { get; }

        Agreements.AgreementsRequestBuilder Agreements { get; }

        AppCatalogs.AppCatalogsRequestBuilder AppCatalogs { get; }

        Applications.ApplicationsRequestBuilder Applications { get; }

        ApplicationTemplates.ApplicationTemplatesRequestBuilder ApplicationTemplates { get; }

        AuditLogs.AuditLogsRequestBuilder AuditLogs { get; }

        AuthenticationMethodConfigurations.AuthenticationMethodConfigurationsRequestBuilder AuthenticationMethodConfigurations { get; }

        AuthenticationMethodsPolicy.AuthenticationMethodsPolicyRequestBuilder AuthenticationMethodsPolicy { get; }

        CertificateBasedAuthConfiguration.CertificateBasedAuthConfigurationRequestBuilder CertificateBasedAuthConfiguration { get; }

        Chats.ChatsRequestBuilder Chats { get; }

        Communications.CommunicationsRequestBuilder Communications { get; }

        Compliance.ComplianceRequestBuilder Compliance { get; }

        Connections.ConnectionsRequestBuilder Connections { get; }

        Contacts.ContactsRequestBuilder Contacts { get; }

        Contracts.ContractsRequestBuilder Contracts { get; }

        DataPolicyOperations.DataPolicyOperationsRequestBuilder DataPolicyOperations { get; }

        DeviceAppManagement.DeviceAppManagementRequestBuilder DeviceAppManagement { get; }

        DeviceManagement.DeviceManagementRequestBuilder DeviceManagement { get; }

        Devices.DevicesRequestBuilder Devices { get; }

        DirectoryNamespace.DirectoryRequestBuilder Directory { get; }

        DirectoryObjects.DirectoryObjectsRequestBuilder DirectoryObjects { get; }

        DirectoryRoles.DirectoryRolesRequestBuilder DirectoryRoles { get; }

        DirectoryRoleTemplates.DirectoryRoleTemplatesRequestBuilder DirectoryRoleTemplates { get; }

        DomainDnsRecords.DomainDnsRecordsRequestBuilder DomainDnsRecords { get; }

        Domains.DomainsRequestBuilder Domains { get; }

        Drives.DrivesRequestBuilder Drives { get; }

        Education.EducationRequestBuilder Education { get; }

        EmployeeExperience.EmployeeExperienceRequestBuilder EmployeeExperience { get; }

        External.ExternalRequestBuilder External { get; }

        FilterOperators.FilterOperatorsRequestBuilder FilterOperators { get; }

        Functions.FunctionsRequestBuilder Functions { get; }

        GroupLifecyclePolicies.GroupLifecyclePoliciesRequestBuilder GroupLifecyclePolicies { get; }

        Groups.GroupsRequestBuilder Groups { get; }

        GroupSettings.GroupSettingsRequestBuilder GroupSettings { get; }

        GroupSettingTemplates.GroupSettingTemplatesRequestBuilder GroupSettingTemplates { get; }

        Identity.IdentityRequestBuilder Identity { get; }

        IdentityGovernance.IdentityGovernanceRequestBuilder IdentityGovernance { get; }

        IdentityProtection.IdentityProtectionRequestBuilder IdentityProtection { get; }

        IdentityProviders.IdentityProvidersRequestBuilder IdentityProviders { get; }

        InformationProtection.InformationProtectionRequestBuilder InformationProtection { get; }

        Invitations.InvitationsRequestBuilder Invitations { get; }

        Me.MeRequestBuilder Me { get; }

        Oauth2PermissionGrants.Oauth2PermissionGrantsRequestBuilder Oauth2PermissionGrants { get; }

        Organization.OrganizationRequestBuilder Organization { get; }

        PermissionGrants.PermissionGrantsRequestBuilder PermissionGrants { get; }

        Places.PlacesRequestBuilder Places { get; }

        Planner.PlannerRequestBuilder Planner { get; }

        Policies.PoliciesRequestBuilder Policies { get; }

        Print.PrintRequestBuilder Print { get; }

        Privacy.PrivacyRequestBuilder Privacy { get; }

        Reports.ReportsRequestBuilder Reports { get; }

        RoleManagement.RoleManagementRequestBuilder RoleManagement { get; }

        SchemaExtensions.SchemaExtensionsRequestBuilder SchemaExtensions { get; }

        ScopedRoleMemberships.ScopedRoleMembershipsRequestBuilder ScopedRoleMemberships { get; }

        Search.SearchRequestBuilder Search { get; }

        Security.SecurityRequestBuilder Security { get; }

        ServicePrincipals.ServicePrincipalsRequestBuilder ServicePrincipals { get; }

        Shares.SharesRequestBuilder Shares { get; }

        Sites.SitesRequestBuilder Sites { get; }

        Solutions.SolutionsRequestBuilder Solutions { get; }

        Storage.StorageRequestBuilder Storage { get; }

        SubscribedSkus.SubscribedSkusRequestBuilder SubscribedSkus { get; }

        Subscriptions.SubscriptionsRequestBuilder Subscriptions { get; }

        Teams.TeamsRequestBuilder Teams { get; }

        TeamsTemplates.TeamsTemplatesRequestBuilder TeamsTemplates { get; }

        Teamwork.TeamworkRequestBuilder Teamwork { get; }

        TenantRelationships.TenantRelationshipsRequestBuilder TenantRelationships { get; }

        Users.UsersRequestBuilder Users { get; }

        ApplicationsWithAppId.ApplicationsWithAppIdRequestBuilder ApplicationsWithAppId(string appId);

        ApplicationsWithUniqueName.ApplicationsWithUniqueNameRequestBuilder ApplicationsWithUniqueName(string uniqueName);

        DevicesWithDeviceId.DevicesWithDeviceIdRequestBuilder DevicesWithDeviceId(string deviceId);

        DirectoryRolesWithRoleTemplateId.DirectoryRolesWithRoleTemplateIdRequestBuilder DirectoryRolesWithRoleTemplateId(string roleTemplateId);

        GroupsWithUniqueName.GroupsWithUniqueNameRequestBuilder GroupsWithUniqueName(string uniqueName);

        ServicePrincipalsWithAppId.ServicePrincipalsWithAppIdRequestBuilder ServicePrincipalsWithAppId(string appId);

        UsersWithUserPrincipalName.UsersWithUserPrincipalNameRequestBuilder UsersWithUserPrincipalName(string userPrincipalName);
    }
}
#nullable restore