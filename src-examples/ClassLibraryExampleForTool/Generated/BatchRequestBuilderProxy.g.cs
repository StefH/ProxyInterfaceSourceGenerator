//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;

namespace Microsoft.Graph.Core.Requests
{
    public partial class BatchRequestBuilderProxy : Requests.IBatchRequestBuilder
    {

        private static Admin.Edge.IEdgeRequestBuilder MapToInterface(Admin.Edge.EdgeRequestBuilder value)
        {
            return new Admin.Edge.EdgeRequestBuilderProxy(value);
        }

        private static Admin.Edge.EdgeRequestBuilder MapToInstance(Admin.Edge.IEdgeRequestBuilder value)
        {
            return value._Instance;
        }

        private static Admin.IAdminRequestBuilder MapToInterface(Admin.AdminRequestBuilder value)
        {
            return new Admin.AdminRequestBuilderProxy(value);
        }

        private static Admin.AdminRequestBuilder MapToInstance(Admin.IAdminRequestBuilder value)
        {
            return value._Instance;
        }

        private static Requests.IBatchRequestBuilder MapToInterface(BatchRequestBuilder value)
        {
            return new BatchRequestBuilderProxy(value);
        }

        private static BatchRequestBuilder MapToInstance(Requests.IBatchRequestBuilder value)
        {
            return value._Instance;
        }



        public BatchRequestBuilder _Instance { get; }
        
        public System.Threading.Tasks.Task<BatchResponseContent> PostAsync(BatchRequestContent batchRequestContent, System.Threading.CancellationToken cancellationToken = default, System.Collections.Generic.Dictionary<string, Kiota.Abstractions.Serialization.ParsableFactory<Kiota.Abstractions.Serialization.IParsable>> errorMappings = null)
        {
            BatchRequestContent batchRequestContent_ = batchRequestContent;
            System.Threading.CancellationToken cancellationToken_ = cancellationToken;
            System.Collections.Generic.Dictionary<string, Kiota.Abstractions.Serialization.ParsableFactory<Kiota.Abstractions.Serialization.IParsable>> errorMappings_ = errorMappings;
            var result__1705712948 = _Instance.PostAsync(batchRequestContent_, cancellationToken_, errorMappings_);
            return result__1705712948;
        }

        public System.Threading.Tasks.Task<BatchResponseContentCollection> PostAsync(BatchRequestContentCollection batchRequestContentCollection, System.Threading.CancellationToken cancellationToken = default, System.Collections.Generic.Dictionary<string, Kiota.Abstractions.Serialization.ParsableFactory<Kiota.Abstractions.Serialization.IParsable>> errorMappings = null)
        {
            BatchRequestContentCollection batchRequestContentCollection_ = batchRequestContentCollection;
            System.Threading.CancellationToken cancellationToken_ = cancellationToken;
            System.Collections.Generic.Dictionary<string, Kiota.Abstractions.Serialization.ParsableFactory<Kiota.Abstractions.Serialization.IParsable>> errorMappings_ = errorMappings;
            var result__1705712948 = _Instance.PostAsync(batchRequestContentCollection_, cancellationToken_, errorMappings_);
            return result__1705712948;
        }

        public System.Threading.Tasks.Task<Kiota.Abstractions.RequestInformation> ToPostRequestInformationAsync(BatchRequestContent batchRequestContent, System.Threading.CancellationToken cancellationToken = default)
        {
            BatchRequestContent batchRequestContent_ = batchRequestContent;
            System.Threading.CancellationToken cancellationToken_ = cancellationToken;
            var result__530651472 = _Instance.ToPostRequestInformationAsync(batchRequestContent_, cancellationToken_);
            return result__530651472;
        }


        public BatchRequestBuilderProxy(BatchRequestBuilder instance)
        {
            _Instance = instance;
            
        }
    }
}
#nullable restore