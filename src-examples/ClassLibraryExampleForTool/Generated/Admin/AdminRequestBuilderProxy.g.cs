//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;

namespace Microsoft.Graph.Admin
{
    public partial class AdminRequestBuilderProxy : IAdminRequestBuilder
    {

        private static Edge.IEdgeRequestBuilder MapToInterface(Edge.EdgeRequestBuilder value)
        {
            return new Edge.EdgeRequestBuilderProxy(value);
        }

        private static Microsoft365Apps.IMicrosoft365AppsRequestBuilder MapToInterface(Microsoft365Apps.Microsoft365AppsRequestBuilder value)
        {
            return new Microsoft365Apps.Microsoft365AppsRequestBuilderProxy(value);
        }

        private static People.IPeopleRequestBuilder MapToInterface(People.PeopleRequestBuilder value)
        {
            return new People.PeopleRequestBuilderProxy(value);
        }

        private static ReportSettings.IReportSettingsRequestBuilder MapToInterface(ReportSettings.ReportSettingsRequestBuilder value)
        {
            return new ReportSettings.ReportSettingsRequestBuilderProxy(value);
        }

        private static ServiceAnnouncement.IServiceAnnouncementRequestBuilder MapToInterface(ServiceAnnouncement.ServiceAnnouncementRequestBuilder value)
        {
            return new ServiceAnnouncement.ServiceAnnouncementRequestBuilderProxy(value);
        }

        private static Sharepoint.ISharepointRequestBuilder MapToInterface(Sharepoint.SharepointRequestBuilder value)
        {
            return new Sharepoint.SharepointRequestBuilderProxy(value);
        }

        private static IAdminRequestBuilder MapToInterface(AdminRequestBuilder value)
        {
            return new AdminRequestBuilderProxy(value);
        }

        private static AdminRequestBuilder MapToInstance(IAdminRequestBuilder value)
        {
            return value._Instance;
        }



        public AdminRequestBuilder _Instance { get; }
        
        public Edge.IEdgeRequestBuilder Edge { get => MapToInterface(_Instance.Edge); }

        public Microsoft365Apps.IMicrosoft365AppsRequestBuilder Microsoft365Apps { get => MapToInterface(_Instance.Microsoft365Apps); }

        public People.IPeopleRequestBuilder People { get => MapToInterface(_Instance.People); }

        public ReportSettings.IReportSettingsRequestBuilder ReportSettings { get => MapToInterface(_Instance.ReportSettings); }

        public ServiceAnnouncement.IServiceAnnouncementRequestBuilder ServiceAnnouncement { get => MapToInterface(_Instance.ServiceAnnouncement); }

        public Sharepoint.ISharepointRequestBuilder Sharepoint { get => MapToInterface(_Instance.Sharepoint); }

        public System.Threading.Tasks.Task<Models.Admin?> GetAsync(Action<Kiota.Abstractions.RequestConfiguration<AdminRequestBuilder.AdminRequestBuilderGetQueryParameters>>? requestConfiguration = null, System.Threading.CancellationToken cancellationToken = default)
        {
            Action<Kiota.Abstractions.RequestConfiguration<AdminRequestBuilder.AdminRequestBuilderGetQueryParameters>>? requestConfiguration_ = requestConfiguration;
            System.Threading.CancellationToken cancellationToken_ = cancellationToken;
            var result_1805284658 = _Instance.GetAsync(requestConfiguration_, cancellationToken_);
            return result_1805284658;
        }

        public System.Threading.Tasks.Task<Models.Admin?> PatchAsync(Models.Admin body, Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration = null, System.Threading.CancellationToken cancellationToken = default)
        {
            Models.Admin body_ = body;
            Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration_ = requestConfiguration;
            System.Threading.CancellationToken cancellationToken_ = cancellationToken;
            var result_910894592 = _Instance.PatchAsync(body_, requestConfiguration_, cancellationToken_);
            return result_910894592;
        }

        public Kiota.Abstractions.RequestInformation ToGetRequestInformation(Action<Kiota.Abstractions.RequestConfiguration<AdminRequestBuilder.AdminRequestBuilderGetQueryParameters>>? requestConfiguration = null)
        {
            Action<Kiota.Abstractions.RequestConfiguration<AdminRequestBuilder.AdminRequestBuilderGetQueryParameters>>? requestConfiguration_ = requestConfiguration;
            var result__695410420 = _Instance.ToGetRequestInformation(requestConfiguration_);
            return result__695410420;
        }

        public Kiota.Abstractions.RequestInformation ToPatchRequestInformation(Models.Admin body, Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration = null)
        {
            Models.Admin body_ = body;
            Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration_ = requestConfiguration;
            var result_2136344646 = _Instance.ToPatchRequestInformation(body_, requestConfiguration_);
            return result_2136344646;
        }

        public IAdminRequestBuilder WithUrl(string rawUrl)
        {
            string rawUrl_ = rawUrl;
            var result_232713549 = _Instance.WithUrl(rawUrl_);
            return MapToInterface(result_232713549);
        }


        public AdminRequestBuilderProxy(AdminRequestBuilder instance)
        {
            _Instance = instance;
            
        }
    }
}
#nullable restore