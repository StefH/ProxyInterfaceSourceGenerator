//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;

namespace Microsoft.Graph.Admin.ServiceAnnouncement.Messages.Archive
{
    public partial interface IArchiveRequestBuilder
    {
        ArchiveRequestBuilder _Instance { get; }

        System.Threading.Tasks.Task<ArchivePostResponse?> PostAsArchivePostResponseAsync(ArchivePostRequestBody body, Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration = null, System.Threading.CancellationToken cancellationToken = default);

        [Obsolete("This method is obsolete. Use PostAsArchivePostResponseAsync instead.")]
        System.Threading.Tasks.Task<ArchiveResponse?> PostAsync(ArchivePostRequestBody body, Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration = null, System.Threading.CancellationToken cancellationToken = default);

        Kiota.Abstractions.RequestInformation ToPostRequestInformation(ArchivePostRequestBody body, Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration = null);

        IArchiveRequestBuilder WithUrl(string rawUrl);
    }
}
#nullable restore