//----------------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by https://github.com/StefH/ProxyInterfaceSourceGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//----------------------------------------------------------------------------------------

#nullable enable
using System;

namespace Microsoft.Graph.Admin.Edge.InternetExplorerMode.SiteLists
{
    public partial class SiteListsRequestBuilderProxy : SiteLists.ISiteListsRequestBuilder
    {

        private static IEdgeRequestBuilder MapToInterface(EdgeRequestBuilder value)
        {
            return new EdgeRequestBuilderProxy(value);
        }

        private static EdgeRequestBuilder MapToInstance(IEdgeRequestBuilder value)
        {
            return value._Instance;
        }

        private static Microsoft365Apps.IMicrosoft365AppsRequestBuilder MapToInterface(Microsoft365Apps.Microsoft365AppsRequestBuilder value)
        {
            return new Microsoft365Apps.Microsoft365AppsRequestBuilderProxy(value);
        }

        private static People.IPeopleRequestBuilder MapToInterface(People.PeopleRequestBuilder value)
        {
            return new People.PeopleRequestBuilderProxy(value);
        }

        private static ReportSettings.IReportSettingsRequestBuilder MapToInterface(ReportSettings.ReportSettingsRequestBuilder value)
        {
            return new ReportSettings.ReportSettingsRequestBuilderProxy(value);
        }

        private static ServiceAnnouncement.IServiceAnnouncementRequestBuilder MapToInterface(ServiceAnnouncement.ServiceAnnouncementRequestBuilder value)
        {
            return new ServiceAnnouncement.ServiceAnnouncementRequestBuilderProxy(value);
        }

        private static Sharepoint.ISharepointRequestBuilder MapToInterface(Sharepoint.SharepointRequestBuilder value)
        {
            return new Sharepoint.SharepointRequestBuilderProxy(value);
        }

        private static IAdminRequestBuilder MapToInterface(AdminRequestBuilder value)
        {
            return new AdminRequestBuilderProxy(value);
        }

        private static AdminRequestBuilder MapToInstance(IAdminRequestBuilder value)
        {
            return value._Instance;
        }

        private static InternetExplorerMode.IInternetExplorerModeRequestBuilder MapToInterface(InternetExplorerModeRequestBuilder value)
        {
            return new InternetExplorerMode.InternetExplorerModeRequestBuilderProxy(value);
        }

        private static InternetExplorerModeRequestBuilder MapToInstance(InternetExplorerMode.IInternetExplorerModeRequestBuilder value)
        {
            return value._Instance;
        }

        private static SiteLists.ISiteListsRequestBuilder MapToInterface(SiteListsRequestBuilder value)
        {
            return new SiteListsRequestBuilderProxy(value);
        }

        private static SiteListsRequestBuilder MapToInstance(SiteLists.ISiteListsRequestBuilder value)
        {
            return value._Instance;
        }

        private static Count.ICountRequestBuilder MapToInterface(Count.CountRequestBuilder value)
        {
            return new Count.CountRequestBuilderProxy(value);
        }

        private static Item.IBrowserSiteListItemRequestBuilder MapToInterface(Item.BrowserSiteListItemRequestBuilder value)
        {
            return new Item.BrowserSiteListItemRequestBuilderProxy(value);
        }



        public SiteListsRequestBuilder _Instance { get; }
        
        public Count.ICountRequestBuilder Count { get => MapToInterface(_Instance.Count); }

        public Item.IBrowserSiteListItemRequestBuilder this[string position] { get => MapToInterface(_Instance[position]); }

        public System.Threading.Tasks.Task<Models.BrowserSiteListCollectionResponse?> GetAsync(Action<Kiota.Abstractions.RequestConfiguration<SiteListsRequestBuilder.SiteListsRequestBuilderGetQueryParameters>>? requestConfiguration = null, System.Threading.CancellationToken cancellationToken = default)
        {
            Action<Kiota.Abstractions.RequestConfiguration<SiteListsRequestBuilder.SiteListsRequestBuilderGetQueryParameters>>? requestConfiguration_ = requestConfiguration;
            System.Threading.CancellationToken cancellationToken_ = cancellationToken;
            var result_1805284658 = _Instance.GetAsync(requestConfiguration_, cancellationToken_);
            return result_1805284658;
        }

        public System.Threading.Tasks.Task<Models.BrowserSiteList?> PostAsync(Models.BrowserSiteList body, Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration = null, System.Threading.CancellationToken cancellationToken = default)
        {
            Models.BrowserSiteList body_ = body;
            Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration_ = requestConfiguration;
            System.Threading.CancellationToken cancellationToken_ = cancellationToken;
            var result__1705712948 = _Instance.PostAsync(body_, requestConfiguration_, cancellationToken_);
            return result__1705712948;
        }

        public Kiota.Abstractions.RequestInformation ToGetRequestInformation(Action<Kiota.Abstractions.RequestConfiguration<SiteListsRequestBuilder.SiteListsRequestBuilderGetQueryParameters>>? requestConfiguration = null)
        {
            Action<Kiota.Abstractions.RequestConfiguration<SiteListsRequestBuilder.SiteListsRequestBuilderGetQueryParameters>>? requestConfiguration_ = requestConfiguration;
            var result__695410420 = _Instance.ToGetRequestInformation(requestConfiguration_);
            return result__695410420;
        }

        public Kiota.Abstractions.RequestInformation ToPostRequestInformation(Models.BrowserSiteList body, Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration = null)
        {
            Models.BrowserSiteList body_ = body;
            Action<Kiota.Abstractions.RequestConfiguration<Kiota.Abstractions.DefaultQueryParameters>>? requestConfiguration_ = requestConfiguration;
            var result__66958716 = _Instance.ToPostRequestInformation(body_, requestConfiguration_);
            return result__66958716;
        }

        public SiteLists.ISiteListsRequestBuilder WithUrl(string rawUrl)
        {
            string rawUrl_ = rawUrl;
            var result_232713549 = _Instance.WithUrl(rawUrl_);
            return MapToInterface(result_232713549);
        }


        public SiteListsRequestBuilderProxy(SiteListsRequestBuilder instance)
        {
            _Instance = instance;
            
        }
    }
}
#nullable restore